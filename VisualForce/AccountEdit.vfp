<!-- while previewing page, add( &id="replace with account id" )to the end of the url to change specific account -->
<!-- Here is a form to eddit a specific account, included but not limited to acc name, phone, industry, and annual revenue.
It also lists the contacts on that account-->
<apex:page standardController="Account">
    <apex:form >
    <apex:pageBlock title="Edit Account">
        <apex:pageMessages />
<!-- single column of input fields -->
		<apex:pageBlockSection columns="1">
    		<apex:inputField value="{! Account.Name }"/>
    		<apex:inputField value="{! Account.Phone }"/>
    		<apex:inputField value="{! Account.Industry }"/>
    		<apex:inputField value="{! Account.AnnualRevenue }"/>
		</apex:pageBlockSection>
        <apex:pageBlockButtons >
<!-- save() action method linked to standard controller -->
            <apex:commandButton action="{! save }" value="Save" />
        </apex:pageBlockButtons>
    </apex:pageBlock>
    <apex:pageBlock title="Contacts">
<!-- create contacts section, with links to appropriate page -->
    <apex:pageBlockTable value="{!Account.contacts}" var="contact">
        <apex:column >
<!-- use the $Action global variable with contact.Id inside the URLFOR()function to link user 
to the edit or delete page -->
            <apex:outputLink value="{! URLFOR($Action.Contact.Edit, contact.Id) }">
                Edit
            </apex:outputLink>
            &nbsp;
            <apex:outputLink value="{! URLFOR($Action.Contact.Delete, contact.Id) }">
                Del
            </apex:outputLink>
        </apex:column>
<!-- finally simply display our contacts and appropriate fields -->
        <apex:column value="{!contact.Name}"/>
        <apex:column value="{!contact.Title}"/>
        <apex:column value="{!contact.Phone}"/>
    </apex:pageBlockTable>
</apex:pageBlock>
</apex:form>
</apex:page>